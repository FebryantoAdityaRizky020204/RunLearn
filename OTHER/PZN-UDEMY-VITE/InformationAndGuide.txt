================= Pengenalan Vite
Development Tool
- saat membuat aplikasi menggunakan NodeJS, baik itu menggunakan js ataupun ts
-> banyak hal yang perlu kita lakukan manual, seperti menjalankan aplikasinya, restart/refresh 
-> ketika dilakukan perubahan, atau jika di typscript perlu dilakukan compile terlebih dahulu sebelum
-> menjalankan ulang aplikasinya

---------- Pengenalan Vite
- Vite (dibava vite), adalah tool untuk mempercepat dev app menggunakan NodeJS,
- Vite memiliki fitur HMR (Hot Module Replacement), yang dapat melakukan perubahan module secara cepat
-> tanpa perlu melakukan reload/refresh halaman.
- vite juga memiliki fitur untuk melakukan bundling (membungkus) kode" yang kita buat menjadi kode
-> yang dipotimasi dengan baik untuk mode prod menggunakan libarary Roolup [https://roolupjs.org]
- website resmi vite: https://vitejs.dev


================= Membuat Project
- buat folder belajar-vite
- npm init
- ubah/tambah type di package.json menjadi module
---------- Menginstall Vite Dependency
=> [npm i --save-dev vite]

================= Menjalankan Aplikasi
- vite bisa digunakan untuk menjalankan aplikasi web
- vite menggunakan file index.html (tergantung) sebagai entry point
- untuk menjalankan menggunakan perintah [npx vite]
- terdapat banyak opsi [vite --help] untuk lebih jelas

================= JavaScript
- secara default, vite mendukung javascript module, sehingga kita bisa membuat kode javascript dengan
-> menggunakan javascript module.
=> membuat file say-hello.js [module]

================= TypeScript
- selain js, vite juga mendukung kompilasi TypeScript otomatis secara realtime
- tambahkan dependensi typescript [npm i --save-dev typescript]
- setup typescript [npx tsc --init]

================= Build
- ketika aplikasi siap/selesai dan ingin di up ke production, kita perlu melakukan build
- vite akan melakukan dependency Pre-Bundling, dimana vite akan menggabungkan banyak module yang kita 
-> gunakan menjadi satu, yang akan mempercepat performa web
- dan vite dapat mendeteksi/mengetahui module mana yang kita gunakan, sehingga file build ini akan
-> optimal
---------- Perintah Build
- [npx vite build] [--help (untuk mengetahui lebih jelas)]
- secara default, hasil build akan disimpan di filder dist
---------- menjalankan hasil build
- harus berada di directory hasil buildnya (dist)
- sama saja [npx vite]

================= Node Dependency
- vite juga bisa secara otomatis melakukan build dari dependency yang kita install menggunakan
-> NodeJS packages
- namun, tidak semua NodeJS packages itu compatible dengan WebBrowser, jadi harus dipastikan 
-> bisa terlebih dahulu di WebBrowser!!!!!.
- contohnya jika kita memasukkan dependency ExpressJS, ini tidak bisa berjalan di web, karena
-> membutuhkan NodeJS HTTP Server, sedangkan di WebBrowser tidak ada.
---------- contoh Dependency UUID
- menambah dependency UUID [npm i uuid]

================= CSS
- vite juga bisa melakukan build pada CSS, dan otomatis akan di bundle nantinya, sehingga bisa
-> lebih optimal

================= CSS Pre-processor
- saat ini banyak sekali Css Pre-.. famework yang digunakan untuk memudahkan pembuatan kode css
- Contohnya: SASS, LESS, STYLUS
- vite juga mendukung CSS Pre-.., sehingga tidak perlu melakukan kompilasi manual
---------- Contoh : SASS
- [npm i --save-dev sass]

================= JSON
- vite juga mendukung bundle file JSON
- dan kita bisa dengan mudah mengambil data tersebut menggunakan javascript module

================= Static Assets
- terkadang kita akan menggunakan static assets ketika dev, seperti foto maupun video
- assets tersebut juga akan dibundle oleh vite
---------- Public Directory
- kadang-kadang kita juga perlu sebuah static assets yang ditampilkan secara dinamis, sehingga lokasinya tidak ada di
-> halaman web HTML
- atau assets yang nama filenya tidak berubah seperti favicon.ico atau robott.txt dll..
- vite mendukung oublic directory untuk meletakkan assets" tersebut, yang tidak akan di optimize ketika di build
=> caranya tiggal buat saja folder public, dan letakkan assets tersebut di dalamnya

================= Preview
- setelah kita melakukan build kita mungkin ingin melihat hasilnya terlebih dahulu sebelum deloyment
-> ke server production
- bisa dilakukan menggunakan [npx vite preview]
- !!!! ingat ini hanya preview di proses deployment, jangan dilakukan di server production


================= Configuration
- secara default, vite sudah memiliki default conf.. 
- namun jika kita ingin mengubah pengaturannya, kita dapat membuatnya di file {vite.config.js}
- semua konfigurasi bisa baca disini [https://vite.dev/config/]

================= Multi-Page Application
- saat membuat web, seringnya kita akan membuat lebih dari satu halaman
- vite juga mendukung build lebih dari satu halaman
- namun, khusus untuk Multi-page app, kita harus daftarkan file" mana saja yang akan di build pada 
-> vite configuration


================= Plugin
- vite sudah sangat mendukung dalam proses dev website
- namun, kadang kita perlu framework tambahan seperti VueJS, ReactJS, dll.
- vite juga memiliki banyak sekali plugin tambahan, yang bisa dilihat pada daftar di
-> [https://vite.dev/plugins]


================= Template
- diawal kitamembuat project vite secara manual, agar mengetahui bagaimana membuat project dari awal
- namun, sebenarnya vite memiliki template yang bisa kita gunakan
- gunakan perintah [npm create vite@latest]

================= Materi Selanjutnya
- Vitest
- VueJS