[33mcommit 586c9bc2a1f6f145bdc09f90c79e82adf92bae1b[m[33m ([m[1;36mHEAD -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m)[m
Author: ADITYA_RIZKY_F <febryantoadityarizky@gmail.com>
Date:   Sun Jan 5 21:41:23 2025 +0700

    [some] learn dart, end today

[1mdiff --git a/Dart/PZN-DART/belajar_dart_dasar/bin/break_dan_continue.dart b/Dart/PZN-DART/belajar_dart_dasar/bin/break_dan_continue.dart[m
[1mnew file mode 100644[m
[1mindex 0000000..70b3b8a[m
[1m--- /dev/null[m
[1m+++ b/Dart/PZN-DART/belajar_dart_dasar/bin/break_dan_continue.dart[m
[36m@@ -0,0 +1,30 @@[m
[32m+[m[32mvoid main() {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * ? break dan continue[m
[32m+[m[32m   * * break, digunakan untuk menghentikan suatu program dalam satu bagan[m
[32m+[m[32m   * * continue digunakan untuk menskip langkah sekarang, dan melanjutkan ke langkah berikutnya[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  // contoh pada perulangan[m
[32m+[m[32m  var counter = 1;[m
[32m+[m[32m  while (counter >= 1) {[m
[32m+[m[32m    if (counter % 2 == 0) {[m
[32m+[m[32m      print('Perulangan ke-$counter');[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (counter == 21) break;[m
[32m+[m[32m    counter++;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  counter = 1;[m
[32m+[m[32m  while (counter >= 1) {[m
[32m+[m[32m    if (counter % 2 == 0) {[m
[32m+[m[32m      counter++;[m
[32m+[m[32m      continue;[m
[32m+[m[32m    }[m
[32m+[m[32m    print('X-Perulangan ke-$counter');[m
[32m+[m
[32m+[m[32m    if (counter == 21) break;[m
[32m+[m[32m    counter++;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/Dart/PZN-DART/belajar_dart_dasar/bin/foor_loop.dart b/Dart/PZN-DART/belajar_dart_dasar/bin/foor_loop.dart[m
[1mnew file mode 100644[m
[1mindex 0000000..a0239e0[m
[1m--- /dev/null[m
[1m+++ b/Dart/PZN-DART/belajar_dart_dasar/bin/foor_loop.dart[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32mvoid main() {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * ? digunakan untuk melakukan pengulangan[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  for (int i = 1; i < 10; i++) {[m
[32m+[m[32m    print('angka: $i');[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  // bentuk lain[m
[32m+[m[32m  int a = 2;[m
[32m+[m[32m  for (; a < 5;) {[m
[32m+[m[32m    print('angka: $a');[m
[32m+[m[32m    a++;[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/Dart/PZN-DART/belajar_dart_dasar/bin/for_in.dart b/Dart/PZN-DART/belajar_dart_dasar/bin/for_in.dart[m
[1mnew file mode 100644[m
[1mindex 0000000..4440124[m
[1m--- /dev/null[m
[1m+++ b/Dart/PZN-DART/belajar_dart_dasar/bin/for_in.dart[m
[36m@@ -0,0 +1,13 @@[m
[32m+[m[32mvoid main() {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * ? For In[m
[32m+[m[32m   * * terkadang kita ingin mengakses list menggunakan pengulangan[m
[32m+[m[32m   * * -> kemudian mengaksesnya berdasarkan indeksnya yang sedikit ribet[m
[32m+[m[32m   * * tetapi ini akan lebih mudah dengan menggunakan for-in[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  var arrayName = <String>['Aditya', 'Rizky', 'Febryanto'];[m
[32m+[m[32m  for (var name in arrayName) {[m
[32m+[m[32m    print(name);[m
[32m+[m[32m  }[m
[32m+[m[32m}[m
[1mdiff --git a/Dart/PZN-DART/belajar_dart_dasar/bin/null_safety.dart b/Dart/PZN-DART/belajar_dart_dasar/bin/null_safety.dart[m
[1mindex dbded0a..95a4067 100644[m
[1m--- a/Dart/PZN-DART/belajar_dart_dasar/bin/null_safety.dart[m
[1m+++ b/Dart/PZN-DART/belajar_dart_dasar/bin/null_safety.dart[m
[36m@@ -67,4 +67,20 @@[m [mvoid main() {[m
   nullableNumber2 = 2; // nullablenumber harus diberi nilai agar tidak error[m
   var number = nullableNumber2;[m
   print(number);[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * ? Mengakses nullable member[m
[32m+[m[32m   * * saat mengakses nullable member (property, method, operator) maka secara[m[41m [m
[32m+[m[32m   * * ->default dart akan memberi peringatanuntuk melakukan null check.[m
[32m+[m[32m   * * namun kita bisa mengakses nullable member secara aman, tanpa harus memaksa konversi[m
[32m+[m[32m   * * -> dengan menggunakan tanda tanya ?[m
[32m+[m[32m   * * namun konsekuensinya, ketika mengakses nullable member, hasil dari member tersebut[m
[32m+[m[32m   * * -> bisa jadi null jika datanya null[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  int? intNumber;[m
[32m+[m[32m  // ignore: dead_code[m
[32m+[m[32m  double? doubleNumber = intNumber?.toDouble();[m
[32m+[m
[32m+[m[32m  print(doubleNumber);[m
 }[m
[1mdiff --git a/Dart/PZN-DART/belajar_dart_dasar/bin/while_loop.dart b/Dart/PZN-DART/belajar_dart_dasar/bin/while_loop.dart[m
[1mnew file mode 100644[m
[1mindex 0000000..2a6c988[m
[1m--- /dev/null[m
[1m+++ b/Dart/PZN-DART/belajar_dart_dasar/bin/while_loop.dart[m
[36m@@ -0,0 +1,24 @@[m
[32m+[m[32mvoid main() {[m
[32m+[m[32m  /**[m
[32m+[m[32m   * ? while loop adalah versi sederhana for-loop[m
[32m+[m[32m   * ? di while-loop hanya ada kondisi pengulangan, tanpa ada init sttmnt dan post sttmnt[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  var counter = 1;[m
[32m+[m[32m  while (counter <= 10) {[m
[32m+[m[32m    print('angka : $counter');[m
[32m+[m[32m    counter++;[m
[32m+[m[32m  }[m
[32m+[m
[32m+[m[32m  /**[m
[32m+[m[32m   * ? do while loop[m
[32m+[m[32m   * ? mirip dengan while loop, tetapi do-while-loop akan menjalankan bagan program[m
[32m+[m[32m   * ? -> setidaknya satu kali[m
[32m+[m[32m   */[m
[32m+[m
[32m+[m[32m  int angka = 2;[m
[32m+[m[32m  do {[m
[32m+[m[32m    print('angka: $angka');[m
[32m+[m[32m    angka++;[m
[32m+[m[32m  } while (angka <= 2);[m
[32m+[m[32m}[m
